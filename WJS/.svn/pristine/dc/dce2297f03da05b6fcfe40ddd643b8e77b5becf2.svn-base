/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wjs.query;

import com.wjs.ebj.NoticeBean;
import com.wjs.entity.Notice;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;

/**
 *
 * @author C0160
 */
@ManagedBean
@RequestScoped
public class NoticeQueryBean {

    @EJB
    private NoticeBean noticeBean;

    private Notice currentNotice;
    private List<Notice> noticeList;
    private List<Notice> topList;

    /**
     * Creates a new instance of NoticeRequestBean
     */
    public NoticeQueryBean() {
    }

    @PostConstruct
    public void construct() {
        init();
    }

    @PreDestroy
    public void destory() {
        if (getNoticeList() != null) {
            getNoticeList().clear();
            setNoticeList(null);
        }
        if (getTopList() != null) {
            getTopList().clear();
            setTopList(null);
        }
        setCurrentNotice(null);
    }

    public void init() {
        setTopList(noticeBean.findTop());
        if (!getTopList().isEmpty()) {
            setCurrentNotice(getTopList().get(0));
        }
    }

    public String view(Notice entity) {
        setCurrentNotice(entity);
        return "noticeDetail";
    }

    public String viewList() {
        setNoticeList(noticeBean.retrieve());
        if (!getNoticeList().isEmpty()) {
            setCurrentNotice(getNoticeList().get(0));
        }
        return "noticeList.xhtml";
    }

    /**
     * @return the currentNotice
     */
    public Notice getCurrentNotice() {
        return currentNotice;
    }

    /**
     * @param currentNotice the currentNotice to set
     */
    public void setCurrentNotice(Notice currentNotice) {
        this.currentNotice = currentNotice;
    }

    /**
     * @return the notice
     */
    public List<Notice> getNoticeList() {
        return noticeList;
    }

    /**
     * @param noticeList the notice to set
     */
    public void setNoticeList(List<Notice> noticeList) {
        this.noticeList = noticeList;
    }

    /**
     * @return the topNotice
     */
    public List<Notice> getTopList() {
        return topList;
    }

    /**
     * @param topList the topNotice to set
     */
    public void setTopList(List<Notice> topList) {
        this.topList = topList;
    }

    /**
     * @return the noticeBean
     */
    public NoticeBean getNoticeBean() {
        return noticeBean;
    }

    /**
     * @param noticeBean the noticeBean to set
     */
    public void setNoticeBean(NoticeBean noticeBean) {
        this.noticeBean = noticeBean;
    }

}
