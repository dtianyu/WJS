/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wjs.ebj;

import com.wjs.entity.SystemUser;
import com.wjs.sbi.EJBOperate;
import java.util.List;
import javax.ejb.Stateless;
import javax.ejb.LocalBean;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

/**
 *
 * @author C0160
 */
@Stateless
@LocalBean
public class SystemUserBean implements EJBOperate<SystemUser> {

    @PersistenceContext(unitName = "WJS-ejbPU")
    private EntityManager em;

    @Override
    public void delete(SystemUser entity) {
        try {
            if (em.contains(entity)) {
                em.remove(entity);
            } else {
                em.remove(em.merge(entity));
            }
        } catch (Exception e) {
            throw new Error(e.toString());
        }
    }

    @Override
    public void persist(SystemUser entity) {
        em.persist(entity);
    }

    @Override
    public SystemUser getById(String value) {
        Query query = em.createNamedQuery("SystemUser.findByUserid");
        query.setParameter("userid", value);
        try {
            return (SystemUser) query.getSingleResult();
        } catch (Exception e) {
            throw new NullPointerException();
        }
    }

    @Override
    public List<SystemUser> getByPId(String value) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int getRowCount() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public List<SystemUser> retrieve() {
        Query query = em.createNamedQuery("SystemUser.findAll");
        return query.getResultList();
    }

    @Override
    public List<SystemUser> retrieve(int first, int pageSize) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public SystemUser update(SystemUser entity) {
        try {
            SystemUser e = em.merge(entity);
            return e;
        } catch (Exception e) {
            throw new Error(e.toString());
        }
    }

    public SystemUser getByIdAndPwd(String id, String pwd) {
        Query query = em.createNamedQuery("SystemUser.findByIdAndPwd");
        query.setParameter("userid", id);
        query.setParameter("pwd", pwd);
        try {
            return (SystemUser) query.getSingleResult();
        } catch (Exception e) {
            throw new NullPointerException();
        }
    }

}
