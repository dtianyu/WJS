/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wjs.query;

import com.wjs.ebj.KnowledgeBean;
import com.wjs.entity.Knowledge;
import com.wjs.lazy.KnowlegdgeModel;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.RequestScoped;
import org.primefaces.model.LazyDataModel;

/**
 *
 * @author kevintung
 */
@ManagedBean(name = "knowledgeQueryBean")
@RequestScoped
public class KnowledgeQueryBean {

    @EJB
    private KnowledgeBean knowledgeBean;

    private Knowledge currentKnowledge;
    private List<Knowledge> topList;
    
    private LazyDataModel model;
    
    @ManagedProperty("#{param.id}")
    private String id;
    /**
     * Creates a new instance of KnowledgeQueryManagedBean
     */
    public KnowledgeQueryBean() {
    }

    @PostConstruct
    public void construct() {
        init();
        setModel(new KnowlegdgeModel(knowledgeBean));
        if(id!=null){
            setCurrentKnowledge(knowledgeBean.getById(id));
        }
    }

    @PreDestroy
    public void destroy() {
        if (getTopList() != null) {
            getTopList().clear();
            setTopList(null);
        }
        setCurrentKnowledge(null);
    }

    public void init() {
        setTopList(knowledgeBean.findTop());
        if (!getTopList().isEmpty()) {
            setCurrentKnowledge(getTopList().get(0));
        }
    }

    public String view(Knowledge entity) {
        if (entity != null) {
            setCurrentKnowledge(entity);
        }
        return "knowledgeDetail";
    }

    public String viewList() {
        return "knowledgeList";
    }

    /**
     * @return the knowledgeBean
     */
    public KnowledgeBean getKnowledgeBean() {
        return knowledgeBean;
    }

    /**
     * @param knowledgeBean the knowledgeBean to set
     */
    public void setKnowledgeBean(KnowledgeBean knowledgeBean) {
        this.knowledgeBean = knowledgeBean;
    }

    /**
     * @return the currentKnowledge
     */
    public Knowledge getCurrentKnowledge() {
        return currentKnowledge;
    }

    /**
     * @param currentKnowledge the currentKnowledge to set
     */
    public void setCurrentKnowledge(Knowledge currentKnowledge) {
        this.currentKnowledge = currentKnowledge;
    }

    /**
     * @return the topList
     */
    public List<Knowledge> getTopList() {
        return topList;
    }

    /**
     * @param topList the topList to set
     */
    public void setTopList(List<Knowledge> topList) {
        this.topList = topList;
    }

    /**
     * @return the model
     */
    public LazyDataModel getModel() {
        return model;
    }

    /**
     * @param model the model to set
     */
    public void setModel(LazyDataModel model) {
        this.model = model;
    }

    /**
     * @return the id
     */
    public String getId() {
        return id;
    }

    /**
     * @param id the id to set
     */
    public void setId(String id) {
        this.id = id;
    }

}
